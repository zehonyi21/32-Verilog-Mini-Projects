$date
	Thu Oct 17 16:05:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module multiplication_tb $end
$var wire 1 ! underflow $end
$var wire 32 " res [31:0] $end
$var wire 1 # overflow $end
$var wire 1 $ exception $end
$var reg 32 % a [31:0] $end
$var reg 32 & b [31:0] $end
$var reg 1 ' clk $end
$scope module dut $end
$var wire 32 ( a [31:0] $end
$var wire 32 ) b [31:0] $end
$var wire 1 $ exception $end
$var wire 1 # overflow $end
$var wire 1 * sign $end
$var wire 1 + zero $end
$var wire 1 ! underflow $end
$var wire 9 , sum_exponent [8:0] $end
$var wire 1 - round $end
$var wire 32 . res [31:0] $end
$var wire 48 / product_normalised [47:0] $end
$var wire 23 0 product_mantissa [22:0] $end
$var wire 48 1 product [47:0] $end
$var wire 24 2 op_b [23:0] $end
$var wire 24 3 op_a [23:0] $end
$var wire 1 4 normalised $end
$var wire 9 5 exponent [8:0] $end
$upscope $end
$scope task iteration $end
$var reg 1 6 Expected_Exception $end
$var reg 1 7 Expected_Overflow $end
$var reg 1 8 Expected_Underflow $end
$var reg 32 9 Expected_result [31:0] $end
$var reg 32 : op_a [31:0] $end
$var reg 32 ; op_b [31:0] $end
$var integer 32 < linenum [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10111001 <
b10000000000000000000000000 ;
b10000000000000000000000000 :
b0 9
08
07
06
bx 5
x4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
x-
bx ,
x+
x*
bx )
bx (
1'
bx &
bx %
x$
x#
bx "
x!
$end
#5
0!
b0 0
0#
0-
0+
04
b0 "
b0 .
b100000000000000000000000000000000000000000000000 /
b0 5
b10000000000000000000000000000000000000000000000 1
b100000000000000000000000 2
0*
0$
b100000000000000000000000 3
b1000 ,
b10000000000000000000000000 &
b10000000000000000000000000 )
b10000000000000000000000000 %
b10000000000000000000000000 (
0'
#10
b11000001 <
b1000101001100100001000011101001 9
b1000010011111001000010100011111 ;
b1000010001101001000010100011111 :
1'
#15
b1000101001100100001000011101010 "
b1000101001100100001000011101010 .
1-
b1100100001000011101010 0
14
b101100100001000011101001100010010011100111000001 /
b10001010 5
b111111001000010100011111 2
b101100100001000011101001100010010011100111000001 1
b101101001000010100011111 3
b100001000 ,
b1000010011111001000010100011111 &
b1000010011111001000010100011111 )
b1000010001101001000010100011111 %
b1000010001101001000010100011111 (
0'
#20
b11001010 <
b11000010001101010101000001100010 9
b11000001011001100011110101110001 ;
b1000000010010011001100110011010 :
1'
#25
b11000010001101010101000001100011 "
b11000010001101010101000001100011 .
b1101010101000001100011 0
b101101010101000001100010111100100111111011111010 /
1*
b111001100011110101110001 2
b101101010101000001100010111100100111111011111010 1
b110010011001100110011010 3
b10000100 5
b100000010 ,
b11000001011001100011110101110001 &
b11000001011001100011110101110001 )
b1000000010010011001100110011010 %
b1000000010010011001100110011010 (
0'
#30
b11010011 <
b1000100000111100101001101110101 9
b11000010010000001010001111010111 ;
b11000001010100100110011001100110 :
1'
#35
b1000100000111100101001101110100 "
b1000100000111100101001101110100 .
b111100101001101110100 0
b100111100101001101110100011001101111000110101010 /
b110000001010001111010111 2
0*
b100111100101001101110100011001101111000110101010 1
b110100100110011001100110 3
b10001000 5
b100000110 ,
b11000010010000001010001111010111 &
b11000010010000001010001111010111 )
b11000001010100100110011001100110 %
b11000001010100100110011001100110 (
0'
#40
b11011100 <
b1001011100000000000000000000000 9
b1000101100000000000000000000000 ;
b1000101100000000000000000000000 :
1'
#45
b1001011100000000000000000000000 "
b1001011100000000000000000000000 .
04
0-
b0 0
b100000000000000000000000000000000000000000000000 /
b100000000000000000000000 2
b10000000000000000000000000000000000000000000000 1
b100000000000000000000000 3
b10010111 5
b100010110 ,
b1000101100000000000000000000000 &
b1000101100000000000000000000000 )
b1000101100000000000000000000000 %
b1000101100000000000000000000000 (
0'
#50
b11100101 <
b110110000111111111111111100111 9
b111010110010100110001011000001 ;
b111010110010100110001011000001 :
1'
#55
b110110000111111111111111111111 "
b110110000111111111111111111111 .
1-
b111111111111111111111 0
14
b100111111111111111111110101011000101010110000001 /
b110010100110001011000001 2
b100111111111111111111110101011000101010110000001 1
b110010100110001011000001 3
b1101100 5
b11101010 ,
b111010110010100110001011000001 &
b111010110010100110001011000001 )
b111010110010100110001011000001 %
b111010110010100110001011000001 (
0'
#60
b11101110 <
b0 9
b0 ;
b0 :
1'
#65
1+
b0 "
b0 .
0!
04
0-
b0 0
b0 /
b0 2
b0 1
b0 3
b0 5
b0 ,
b0 &
b0 )
b0 %
b0 (
0'
#70
b11110111 <
b10000000000000000000000000000000 9
b11000001010100100110011001100110 :
1'
#75
b10000000000000000000000000000000 "
b10000000000000000000000000000000 .
b11 5
1*
b110100100110011001100110 3
b10000010 ,
b11000001010100100110011001100110 %
b11000001010100100110011001100110 (
0'
#80
b100000000 <
b0 9
17
16
b1111111100000000000000000000000 ;
b1111111100000000000000000000000 :
1'
#85
b100000000000000000000000000000000000000000000000 /
1#
0+
b0 "
b0 .
b10000000000000000000000000000000000000000000000 1
b100000000000000000000000 2
0*
1$
b100000000000000000000000 3
b101111111 5
b111111110 ,
b1111111100000000000000000000000 &
b1111111100000000000000000000000 )
b1111111100000000000000000000000 %
b1111111100000000000000000000000 (
0'
#90
1'
